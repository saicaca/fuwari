---
import { Icon } from "astro-icon/components";
import type { CategoryNode } from "../../utils/content-utils";
import ButtonLink from "../control/ButtonLink.astro";
// 递归调用：用别名避免与编译器内部组件名冲突
import CategoryBranchRecursive from "./CategoryBranch.astro";

interface Props {
	node: CategoryNode;
}
const { node } = Astro.props;
const hasChildren = node.children.length > 0;
---
<div class="category-node">
  <div class="flex items-center w-full">
    <div class="flex items-center justify-center w-6 h-6 flex-shrink-0">
      {hasChildren && (
        <div class="flex items-center justify-center w-6 h-6 rounded-md transition-all duration-200 hover:bg-[var(--btn-plain-bg-hover)] active:bg-[var(--btn-plain-bg-active)] category-toggle-container cursor-pointer" data-toggle>
          <Icon
            name="fa6-solid:angle-right"
            class="w-3 h-3 category-toggle transition-all duration-300 text-black/50 hover:text-[var(--primary)] dark:text-white/50 dark:hover:text-[var(--primary)] hover:scale-110 transform-gpu pointer-events-none"
            role="button"
            aria-label={`Toggle children of ${node.name}`}
            aria-expanded="false"
          />
        </div>
      )}
    </div>
    <div class="flex-1 min-w-0">
      <ButtonLink
        url={node.url}
        badge={String(node.count)}
        label={`View all posts in the ${node.name.trim()} category`}
      >
        {node.name.trim()}
      </ButtonLink>
    </div>
  </div>
  {hasChildren && (
    <div class="ml-6 category-children grid grid-rows-[0fr] transition-all duration-300 ease-in-out">
      <div class="overflow-hidden">
        {node.children.map(child => <CategoryBranchRecursive node={child} />)}
      </div>
    </div>
  )}
</div>
